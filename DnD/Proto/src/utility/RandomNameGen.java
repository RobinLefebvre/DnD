package utility;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;

public class RandomNameGen {
	public static Map<String, List<String>> raceNames = new HashMap<String, List<String>>();
	static {
		for(String race : CharacterUtility.racesList){
			List<String> names = new ArrayList<String>();
			switch(race){
				case "Dragonborn" : 
					names.add("Arjhan");
					names.add("Balasar");
					names.add("Bharash");
					names.add("Donaar");
					names.add("Ghesh");
					names.add("Heskan");
					names.add("Kriv");
					names.add("Medrash");
					names.add("Mehlen");
					names.add("Nadarr");
					names.add("Pandjed");
					names.add("Patrin");
					names.add("Rhogar");
					names.add("Shamash");
					names.add("Shedinn");
					names.add("Tarhun");
					names.add("Torinn");
					names.add("Akra");
					names.add("Biri");
					names.add("Daar");
					names.add("Farideh");
					names.add("Harann");
					names.add("Havilar");
					names.add("Jheri");
					names.add("Kava");
					names.add("Korinn");
					names.add("Mishann");
					names.add("Nala");
					names.add("Perra");
					names.add("Raiann");
					names.add("Sora");
					names.add("Surina");
					names.add("Thava");
					names.add("Uadiit");
					raceNames.put(race, names);
					break;
				case "Dwarf (Hill)" : 
					names.add("Adrik");
					names.add("Alberich");
					names.add("Baern");
					names.add("Barendd");
					names.add("Brottor");
					names.add("Bruenor");
					names.add("Dain");
					names.add("Darrak");
					names.add("Delg");
					names.add("Eberk");
					names.add("Einkil");
					names.add("Fargrim");
					names.add("Flint");
					names.add("Gardain");
					names.add("Harbek");
					names.add("Kildrak");
					names.add("Morgran");
					names.add("Orsik");
					names.add("Oskar");
					names.add("Rangrim");
					names.add("Rurik");
					names.add("Taklinn");
					names.add("Thoradin");
					names.add("Thorin");
					names.add("Tordek");
					names.add("Traubon");
					names.add("Travok");
					names.add("Uligar");
					names.add("Veit");
					names.add("Vondal");
					names.add("Amber");
					names.add("Artin");
					names.add("Audhild");
					names.add("Bardryn");
					names.add("Danal");
					names.add("Diesa");
					names.add("Eldeth");
					names.add("Falkrunn");
					names.add("Finellen");
					names.add("Gunnloda");
					names.add("Gurdis");
					names.add("Helja");
					names.add("Hlin");
					names.add("Kathra");
					names.add("Kristryd");
					names.add("Ilde");
					names.add("Liftrasa");
					names.add("Mardred");
					names.add("Riswynn");
					names.add("Sannl");
					names.add("Torbera");
					names.add("Torgga");
					names.add("Vistra");
					names.add("Balderk");
					raceNames.put(race, names);
					break;
				case "Dwarf (Mountain)" : 
					names.add("Adrik");
					names.add("Alberich");
					names.add("Baern");
					names.add("Barendd");
					names.add("Brottor");
					names.add("Bruenor");
					names.add("Dain");
					names.add("Darrak");
					names.add("Delg");
					names.add("Eberk");
					names.add("Einkil");
					names.add("Fargrim");
					names.add("Flint");
					names.add("Gardain");
					names.add("Harbek");
					names.add("Kildrak");
					names.add("Morgran");
					names.add("Orsik");
					names.add("Oskar");
					names.add("Rangrim");
					names.add("Rurik");
					names.add("Taklinn");
					names.add("Thoradin");
					names.add("Thorin");
					names.add("Tordek");
					names.add("Traubon");
					names.add("Travok");
					names.add("Uligar");
					names.add("Veit");
					names.add("Vondal");
					names.add("Amber");
					names.add("Artin");
					names.add("Audhild");
					names.add("Bardryn");
					names.add("Danal");
					names.add("Diesa");
					names.add("Eldeth");
					names.add("Falkrunn");
					names.add("Finellen");
					names.add("Gunnloda");
					names.add("Gurdis");
					names.add("Helja");
					names.add("Hlin");
					names.add("Kathra");
					names.add("Kristryd");
					names.add("Ilde");
					names.add("Liftrasa");
					names.add("Mardred");
					names.add("Riswynn");
					names.add("Sannl");
					names.add("Torbera");
					names.add("Torgga");
					names.add("Vistra");
					names.add("Balderk");
					raceNames.put(race, names);
					break;
				case "Elf (High)" :
					names.add("Adran");
					names.add("Aelar");
					names.add("Aramil");
					names.add("Arannis");
					names.add("Aust");
					names.add("Beiro");
					names.add("Berrian");
					names.add("Carric");
					names.add("Enialis");
					names.add("Erdan");
					names.add("Erevan");
					names.add("Galinndan");
					names.add("Hadarai");
					names.add("Heian");
					names.add("Himo");
					names.add("Immeral");
					names.add("Ivellios");
					names.add("Laucian");
					names.add("Mindartis");
					names.add("Paelias");
					names.add("Peren");
					names.add("Quarion");
					names.add("Riardon");
					names.add("Rolen");
					names.add("Soveliss");
					names.add("Tharmior");
					names.add("Tharivol");
					names.add("Theren");
					names.add("Varis");
					names.add("Adrie");
					names.add("Althaea");
					names.add("Anastrianna");
					names.add("Andraste");
					names.add("Antinua");
					names.add("Bethrynna");
					names.add("Birel");
					names.add("Caelynn");
					names.add("Drusilia");
					names.add("Enna");
					names.add("Felosial");
					names.add("Ielenia");
					names.add("Jelenneth");
					names.add("Keyleth");
					names.add("Leshanna");
					names.add("Lia");
					names.add("Meriele");
					names.add("Mialee");
					names.add("Naivara");
					names.add("Quelenna");
					names.add("Quillathe");
					names.add("Sariel");
					names.add("Shanairra");
					names.add("Shava");
					names.add("Silaqui");
					names.add("Theirastra");
					names.add("Thia");
					names.add("Vadania");
					names.add("Valanthe");
					names.add("Xanaphia");
					raceNames.put(race, names);
					break;
				case "Elf (Wood)" : 
					names.add("Adran");
					names.add("Aelar");
					names.add("Aramil");
					names.add("Arannis");
					names.add("Aust");
					names.add("Beiro");
					names.add("Berrian");
					names.add("Carric");
					names.add("Enialis");
					names.add("Erdan");
					names.add("Erevan");
					names.add("Galinndan");
					names.add("Hadarai");
					names.add("Heian");
					names.add("Himo");
					names.add("Immeral");
					names.add("Ivellios");
					names.add("Laucian");
					names.add("Mindartis");
					names.add("Paelias");
					names.add("Peren");
					names.add("Quarion");
					names.add("Riardon");
					names.add("Rolen");
					names.add("Soveliss");
					names.add("Tharmior");
					names.add("Tharivol");
					names.add("Theren");
					names.add("Varis");
					names.add("Adrie");
					names.add("Althaea");
					names.add("Anastrianna");
					names.add("Andraste");
					names.add("Antinua");
					names.add("Bethrynna");
					names.add("Birel");
					names.add("Caelynn");
					names.add("Drusilia");
					names.add("Enna");
					names.add("Felosial");
					names.add("Ielenia");
					names.add("Jelenneth");
					names.add("Keyleth");
					names.add("Leshanna");
					names.add("Lia");
					names.add("Meriele");
					names.add("Mialee");
					names.add("Naivara");
					names.add("Quelenna");
					names.add("Quillathe");
					names.add("Sariel");
					names.add("Shanairra");
					names.add("Shava");
					names.add("Silaqui");
					names.add("Theirastra");
					names.add("Thia");
					names.add("Vadania");
					names.add("Valanthe");
					names.add("Xanaphia");
					raceNames.put(race, names);
					break;
				case "Elf (Drow)" : 
					names.add("Adran");
					names.add("Aelar");
					names.add("Aramil");
					names.add("Arannis");
					names.add("Aust");
					names.add("Beiro");
					names.add("Berrian");
					names.add("Carric");
					names.add("Enialis");
					names.add("Erdan");
					names.add("Erevan");
					names.add("Galinndan");
					names.add("Hadarai");
					names.add("Heian");
					names.add("Himo");
					names.add("Immeral");
					names.add("Ivellios");
					names.add("Laucian");
					names.add("Mindartis");
					names.add("Paelias");
					names.add("Peren");
					names.add("Quarion");
					names.add("Riardon");
					names.add("Rolen");
					names.add("Soveliss");
					names.add("Tharmior");
					names.add("Tharivol");
					names.add("Theren");
					names.add("Varis");
					names.add("Adrie");
					names.add("Althaea");
					names.add("Anastrianna");
					names.add("Andraste");
					names.add("Antinua");
					names.add("Bethrynna");
					names.add("Birel");
					names.add("Caelynn");
					names.add("Drusilia");
					names.add("Enna");
					names.add("Felosial");
					names.add("Ielenia");
					names.add("Jelenneth");
					names.add("Keyleth");
					names.add("Leshanna");
					names.add("Lia");
					names.add("Meriele");
					names.add("Mialee");
					names.add("Naivara");
					names.add("Quelenna");
					names.add("Quillathe");
					names.add("Sariel");
					names.add("Shanairra");
					names.add("Shava");
					names.add("Silaqui");
					names.add("Theirastra");
					names.add("Thia");
					names.add("Vadania");
					names.add("Valanthe");
					names.add("Xanaphia");
					raceNames.put(race, names);
					break;
				case "Gnome (Forest)" : 
					names.add("Alston");
					names.add("Alvyn");
					names.add("Boddynock");
					names.add("Brocc");
					names.add("Burgell");
					names.add("Dimble");
					names.add("Eldon");
					names.add("Erky");
					names.add("Fonkin");
					names.add("Frug");
					names.add("Gerbo");
					names.add("Gimble");
					names.add("Glim");
					names.add("Jebeddo");
					names.add("Kellen");
					names.add("Namfoodle");
					names.add("Orryn");
					names.add("Roondar");
					names.add("Seebo");
					names.add("Sindri");
					names.add("Warryn");
					names.add("Wrenn");
					names.add("Zook");
					names.add("Bimpnottin");
					names.add("Breena");
					names.add("Caramip");
					names.add("Carlin");
					names.add("Donella");
					names.add("Duvamil");
					names.add("Ella");
					names.add("Ellyjobell");
					names.add("Ellywick");
					names.add("Lilli");
					names.add("Loopmottin");
					names.add("Lorilla");
					names.add("Marnab");
					names.add("Nissa");
					names.add("Nyx");
					names.add("Oda");
					names.add("Orla");
					names.add("Roywyn");
					names.add("Shamil");
					names.add("Tana");
					names.add("Waywocket");
					names.add("Zanna");
					names.add("Beren");
					raceNames.put(race, names);
					break;
				case "Gnome (Rock)" : 
					names.add("Alston");
					names.add("Alvyn");
					names.add("Boddynock");
					names.add("Brocc");
					names.add("Burgell");
					names.add("Dimble");
					names.add("Eldon");
					names.add("Erky");
					names.add("Fonkin");
					names.add("Frug");
					names.add("Gerbo");
					names.add("Gimble");
					names.add("Glim");
					names.add("Jebeddo");
					names.add("Kellen");
					names.add("Namfoodle");
					names.add("Orryn");
					names.add("Roondar");
					names.add("Seebo");
					names.add("Sindri");
					names.add("Warryn");
					names.add("Wrenn");
					names.add("Zook");
					names.add("Bimpnottin");
					names.add("Breena");
					names.add("Caramip");
					names.add("Carlin");
					names.add("Donella");
					names.add("Duvamil");
					names.add("Ella");
					names.add("Ellyjobell");
					names.add("Ellywick");
					names.add("Lilli");
					names.add("Loopmottin");
					names.add("Lorilla");
					names.add("Marnab");
					names.add("Nissa");
					names.add("Nyx");
					names.add("Oda");
					names.add("Orla");
					names.add("Roywyn");
					names.add("Shamil");
					names.add("Tana");
					names.add("Waywocket");
					names.add("Zanna");
					names.add("Beren");
					raceNames.put(race, names);
					break;
				case "Gnome (Deep)" : 
					names.add("Alston");
					names.add("Alvyn");
					names.add("Boddynock");
					names.add("Brocc");
					names.add("Burgell");
					names.add("Dimble");
					names.add("Eldon");
					names.add("Erky");
					names.add("Fonkin");
					names.add("Frug");
					names.add("Gerbo");
					names.add("Gimble");
					names.add("Glim");
					names.add("Jebeddo");
					names.add("Kellen");
					names.add("Namfoodle");
					names.add("Orryn");
					names.add("Roondar");
					names.add("Seebo");
					names.add("Sindri");
					names.add("Warryn");
					names.add("Wrenn");
					names.add("Zook");
					names.add("Bimpnottin");
					names.add("Breena");
					names.add("Caramip");
					names.add("Carlin");
					names.add("Donella");
					names.add("Duvamil");
					names.add("Ella");
					names.add("Ellyjobell");
					names.add("Ellywick");
					names.add("Lilli");
					names.add("Loopmottin");
					names.add("Lorilla");
					names.add("Marnab");
					names.add("Nissa");
					names.add("Nyx");
					names.add("Oda");
					names.add("Orla");
					names.add("Roywyn");
					names.add("Shamil");
					names.add("Tana");
					names.add("Waywocket");
					names.add("Zanna");
					names.add("Beren");
					raceNames.put(race, names);
					break;
				case "Goblin" : 
					names.add("Dench");
					names.add("Feng");
					names.add("Gell");
					names.add("Henk");
					names.add("Thokk");
					names.add("Baggi");
					names.add("Emen");
					names.add("Engong");
					names.add("Kansif");
					names.add("Myev");
					names.add("Neega");
					names.add("Ovak");
					names.add("Ownka");
					names.add("Sautha");
					names.add("Sutha");
					names.add("Vola");
					names.add("Volen");
					names.add("Yevelda");
					raceNames.put(race, names);
					break;
				case "Halfling (Lightfoot)" : 
					names.add("Alton");
					names.add("Ander");
					names.add("Cade");
					names.add("Corrin");
					names.add("Eldon");
					names.add("Errich");
					names.add("Finnan");
					names.add("Garret");
					names.add("Lindal");
					names.add("Lyle");
					names.add("Merric");
					names.add("Milo");
					names.add("Osborn");
					names.add("Perrin");
					names.add("Reed");
					names.add("Roscoe");
					names.add("Wellby");
					names.add("Andry");
					names.add("Bree");
					names.add("Callie");
					names.add("Cora");
					names.add("Euphemia");
					names.add("Jillian");
					names.add("Kithri");
					names.add("Lavinia");
					names.add("Lidda");
					names.add("Merla");
					names.add("Nedda");
					names.add("Paela");
					names.add("Portia");
					names.add("Seraphina");
					names.add("Shaena");
					names.add("Trym");
					names.add("Vani");
					names.add("Verna");
					raceNames.put(race, names);
					break;
				case "Halfling (Stout)" : 
					names.add("Alton");
					names.add("Ander");
					names.add("Cade");
					names.add("Corrin");
					names.add("Eldon");
					names.add("Errich");
					names.add("Finnan");
					names.add("Garret");
					names.add("Lindal");
					names.add("Lyle");
					names.add("Merric");
					names.add("Milo");
					names.add("Osborn");
					names.add("Perrin");
					names.add("Reed");
					names.add("Roscoe");
					names.add("Wellby");
					names.add("Andry");
					names.add("Bree");
					names.add("Callie");
					names.add("Cora");
					names.add("Euphemia");
					names.add("Jillian");
					names.add("Kithri");
					names.add("Lavinia");
					names.add("Lidda");
					names.add("Merla");
					names.add("Nedda");
					names.add("Paela");
					names.add("Portia");
					names.add("Seraphina");
					names.add("Shaena");
					names.add("Trym");
					names.add("Vani");
					names.add("Verna");
					raceNames.put(race, names);
					break;
				case "Half-Elf" : 
					names.add("Adran");
					names.add("Aelar");
					names.add("Aramil");
					names.add("Arannis");
					names.add("Aust");
					names.add("Beiro");
					names.add("Berrian");
					names.add("Carric");
					names.add("Enialis");
					names.add("Erdan");
					names.add("Erevan");
					names.add("Galinndan");
					names.add("Hadarai");
					names.add("Heian");
					names.add("Himo");
					names.add("Immeral");
					names.add("Ivellios");
					names.add("Laucian");
					names.add("Mindartis");
					names.add("Paelias");
					names.add("Peren");
					names.add("Quarion");
					names.add("Riardon");
					names.add("Rolen");
					names.add("Soveliss");
					names.add("Tharmior");
					names.add("Tharivol");
					names.add("Theren");
					names.add("Varis");
					names.add("Adrie");
					names.add("Althaea");
					names.add("Anastrianna");
					names.add("Andraste");
					names.add("Antinua");
					names.add("Bethrynna");
					names.add("Birel");
					names.add("Caelynn");
					names.add("Drusilia");
					names.add("Enna");
					names.add("Felosial");
					names.add("Ielenia");
					names.add("Jelenneth");
					names.add("Keyleth");
					names.add("Leshanna");
					names.add("Lia");
					names.add("Meriele");
					names.add("Mialee");
					names.add("Naivara");
					names.add("Quelenna");
					names.add("Quillathe");
					names.add("Sariel");
					names.add("Shanairra");
					names.add("Shava");
					names.add("Silaqui");
					names.add("Theirastra");
					names.add("Thia");
					names.add("Vadania");
					names.add("Valanthe");
					names.add("Xanaphia");
					raceNames.put(race, names);
					break;
				case "Half-Orc" : 
					names.add("Dench");
					names.add("Feng");
					names.add("Gell");
					names.add("Henk");
					names.add("Thokk");
					names.add("Baggi");
					names.add("Emen");
					names.add("Engong");
					names.add("Kansif");
					names.add("Myev");
					names.add("Neega");
					names.add("Ovak");
					names.add("Ownka");
					names.add("Sautha");
					names.add("Sutha");
					names.add("Vola");
					names.add("Volen");
					names.add("Yevelda");
					raceNames.put(race, names);
					break;
				case "Human" : 
					names.add("Aseir");
					names.add("Bardeid");
					names.add("Haseid");
					names.add("Khem ed");
					names.add("Mehmen");
					names.add("Sudeim an");
					names.add("Zasheir");
					names.add("Atala");
					names.add("Ceidil");
					names.add("Hama");
					names.add("Jasmal");
					names.add("Meilil");
					names.add("Seipora");
					names.add("Yasheira");
					names.add("Zasheida");
					names.add("Darvin");
					names.add("Dorn");
					names.add("Evendur");
					names.add("Gorstag");
					names.add("Grim");
					names.add("Helm");
					names.add("Malark");
					names.add("Morn");
					names.add("Randal");
					names.add("Stedd");
					names.add("Arveene");
					names.add("Esvele");
					names.add("Jhessail");
					names.add("Kerri");
					names.add("Lureene");
					names.add("Miri");
					names.add("Rowan");
					names.add("Shandri");
					names.add("Tessele");
					names.add("Bor");
					names.add("Fodel");
					names.add("Grigor");
					names.add("Glar");
					names.add("Igan");
					names.add("Ivor");
					names.add("Kosef");
					names.add("Mival");
					names.add("Orel");
					names.add("Pavel");
					names.add("Sergor");
					names.add("Alethra");
					names.add("Kara");
					names.add("Katernin");
					names.add("Mara");
					names.add("Natali");
					names.add("Olma");
					names.add("Tana");
					names.add("Zora");
					names.add("Ander");
					names.add("Blath");
					names.add("Bran");
					names.add("Frath");
					names.add("Geth");
					names.add("Lander");
					names.add("Luth");
					names.add("Malcer");
					names.add("Stor");
					names.add("Taman");
					names.add("Urth");
					names.add("Amafrey");
					names.add("Betha");
					names.add("Cefrey");
					names.add("Kethra");
					names.add("Mara");
					names.add("Olga");
					names.add("Silifrey");
					names.add("Westra");
					names.add("Aoth");
					names.add("Bareris");
					names.add("Ehput-Ki");
					names.add("Kethoth");
					names.add("Mumed");
					names.add("Ram as");
					names.add("So-Kehur");
					names.add("Thazar-De");
					names.add("Urhur");
					names.add("Arizima");
					names.add("Chathi");
					names.add("Nephis");
					names.add("Nulara");
					names.add("Murithi");
					names.add("Sefris");
					names.add("Thola");
					names.add("Umara");
					names.add("Zolis");
					names.add("Borivik");
					names.add("Faurgar");
					names.add("Jandar");
					names.add("Kanithar");
					names.add("Madislak");
					names.add("Ralmevik");
					names.add("Shaumar");
					names.add("Vladislak");
					names.add("Fyevarra");
					names.add("Hulmarra");
					names.add("Immith");
					names.add("Imzel");
					names.add("Navarra");
					names.add("Shevarra");
					names.add("Tammith");
					names.add("Yuldra");
					names.add("An");
					names.add("Chen");
					names.add("Chi");
					names.add("Fai");
					names.add("Jiang");
					names.add("Jun");
					names.add("Lian");
					names.add("Long");
					names.add("Meng");
					names.add("On");
					names.add("Shan");
					names.add("Shui");
					names.add("Wen");
					names.add("Bai");
					names.add("Chao");
					names.add("Jia");
					names.add("Lei");
					names.add("Mei");
					names.add("Qiao");
					names.add("Shui");
					names.add("Tai");
					names.add("Anton");
					names.add("Diero");
					names.add("Marcon");
					names.add("Pieron");
					names.add("Rimardo");
					names.add("Romero");
					names.add("Salazar");
					names.add("Umbero");
					names.add("Balama");
					names.add("Dona");
					names.add("Faila");
					names.add("Jalana");
					names.add("Luisa");
					names.add("Marta");
					names.add("Quara");
					names.add("Selise");
					names.add("Vonda");
					raceNames.put(race, names);
					break;
				case "Kobold" : 
					names.add("Dench");
					names.add("Feng");
					names.add("Gell");
					names.add("Henk");
					names.add("Thokk");
					names.add("Baggi");
					names.add("Emen");
					names.add("Engong");
					names.add("Kansif");
					names.add("Myev");
					names.add("Neega");
					names.add("Ovak");
					names.add("Ownka");
					names.add("Sautha");
					names.add("Sutha");
					names.add("Vola");
					names.add("Volen");
					names.add("Yevelda");
					raceNames.put(race, names);
					break;
				case "Orc" : 
					names.add("Dench");
					names.add("Feng");
					names.add("Gell");
					names.add("Henk");
					names.add("Thokk");
					names.add("Baggi");
					names.add("Emen");
					names.add("Engong");
					names.add("Kansif");
					names.add("Myev");
					names.add("Neega");
					names.add("Ovak");
					names.add("Ownka");
					names.add("Sautha");
					names.add("Sutha");
					names.add("Vola");
					names.add("Volen");
					names.add("Yevelda");
					raceNames.put(race, names);
					break;
				case "Tiefling" : 
					names.add("Akmenos");
					names.add("Amnon");
					names.add("Barakas");
					names.add("Damakos");
					names.add("Ekemon");
					names.add("Iados");
					names.add("Karion");
					names.add("Leucis");
					names.add("Melech");
					names.add("Mordai");
					names.add("Morthos");
					names.add("Pelaios");
					names.add("Skamos");
					names.add("Therai");
					names.add("Akta");
					names.add("Anakis");
					names.add("Bryseis");
					names.add("Criella");
					names.add("Damaia");
					names.add("Ea");
					names.add("Kallista");
					names.add("Lerissa");
					names.add("Makaria");
					names.add("Nemeia");
					names.add("Orianna");
					names.add("Phelaia");
					names.add("Rieta");
					names.add("Art");
					names.add("Chant");
					names.add("Creed");
					names.add("Despair");
					names.add("Excellence");
					names.add("Fear");
					names.add("Glory");
					names.add("Hope");
					names.add("Ideal");
					names.add("Reverence");
					names.add("Sorrow");
					raceNames.put(race, names);
					break;
			}
		}
	}
	
	public static String generateRandomName(String race){
		Random rng = new Random();
		List<String> names = raceNames.get(race);
		String name = names.get(rng.nextInt(names.size()));
		//System.out.println(name);
		return name;
	}
}
